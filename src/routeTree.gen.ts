/* prettier-ignore-start */

/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file is auto-generated by TanStack Router
// Import Routes
import { Route as rootRoute } from './routes/__root'
import { Route as HeroesHeroIdImport } from './routes/heroes/$heroId'
import { Route as HeroesIndexImport } from './routes/heroes/index'
import { createFileRoute } from '@tanstack/react-router'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/index.lazy').then(d => d.Route))

const HeroesIndexRoute = HeroesIndexImport.update({
  id: '/heroes/',
  path: '/heroes/',
  getParentRoute: () => rootRoute
} as any)

const HeroesHeroIdRoute = HeroesHeroIdImport.update({
  id: '/heroes/$heroId',
  path: '/heroes/$heroId',
  getParentRoute: () => rootRoute
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/heroes/$heroId': {
      id: '/heroes/$heroId'
      path: '/heroes/$heroId'
      fullPath: '/heroes/$heroId'
      preLoaderRoute: typeof HeroesHeroIdImport
      parentRoute: typeof rootRoute
    }
    '/heroes/': {
      id: '/heroes/'
      path: '/heroes'
      fullPath: '/heroes'
      preLoaderRoute: typeof HeroesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/heroes/$heroId': typeof HeroesHeroIdRoute
  '/heroes': typeof HeroesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/heroes/$heroId': typeof HeroesHeroIdRoute
  '/heroes': typeof HeroesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/heroes/$heroId': typeof HeroesHeroIdRoute
  '/heroes/': typeof HeroesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/heroes/$heroId' | '/heroes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/heroes/$heroId' | '/heroes'
  id: '__root__' | '/' | '/heroes/$heroId' | '/heroes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  HeroesHeroIdRoute: typeof HeroesHeroIdRoute
  HeroesIndexRoute: typeof HeroesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  HeroesHeroIdRoute: HeroesHeroIdRoute,
  HeroesIndexRoute: HeroesIndexRoute
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/heroes/$heroId",
        "/heroes/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/heroes/$heroId": {
      "filePath": "heroes/$heroId.tsx"
    },
    "/heroes/": {
      "filePath": "heroes/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
